parameters:
  DataFileDirectory: 'Release'

jobs: #Build and stage projects

- job: 'PreBuildCheck'
  pool:
      vmImage: 'windows-2022'
      demands:
      - msbuild
      - visualstudio
  variables:
      runCodesignValidationInjection: false

  #Specified container image to use for build. See: https://hub.docker.com/_/microsoft-windows-servercore
  container: mcr.microsoft.com/windows/servercore:ltsc2022-KB5017316

  steps:
  #Pre build analysis
  - template: template-prebuild-code-analysis.yaml

- job: 'BuildAndStageProjects'
  pool:
      vmImage: 'windows-2022'
      demands:
      - msbuild
      - visualstudio

  steps:
  # Bootstrap the build
  - template: template-build-and-prep-automation.yaml

# Disabled because mono is unable to restore/build .NET 6 target in MSAL project
# BUILD IOS APPCENTER APP PHASE
#- job: 'BuildiOSAppCenterApp'
#  dependsOn:
#    - 'PreBuildCheck'
#  pool:
#      name: Azure Pipelines
#      vmImage: macos-latest
#  variables:
#      runCodesignValidationInjection: false

#  steps:
#  - template: template-build-ios-automation.yaml

  # BUILD ANDROID APPCENTER APP PHASE
- job: 'BuildAndroidAppCenterApp'
  dependsOn:
    - 'PreBuildCheck'
  pool:
      vmImage: 'windows-2022'
      demands:
      - msbuild
      - visualstudio
  variables:
      runCodesignValidationInjection: false

  steps:
  - template: template-build-android-automation.yaml

# BUILD AND RUN CACHE COMPAT TESTS
- job: 'BuildAndRunCacheCompatTests'
  dependsOn:
    - 'BuildAndStageProjects'
  pool:
      vmImage: 'windows-2022'
      demands:
      - msbuild
      - visualstudio
  variables:
      runCodesignValidationInjection: false

  steps:
  - template: template-cachecompat-automation.yaml
    parameters:
      BuildPlatform: '$(BuildPlatform)'
      BuildConfiguration: '$(BuildConfiguration)'
      BuildSolution: 'LibsAndSamples.sln'

  #Desktop Unit + Integration Tests
- job: 'RunDesktopTests'
  #strategy:
  #  parallel: 5
  dependsOn:
  - 'BuildAndStageProjects'
  pool:
      vmImage: 'windows-2022'
      demands:
      - msbuild
      - visualstudio
  variables:
      runCodesignValidationInjection: false

  steps:
  - template: template-desktop-unit-and-automation.yaml

# APP CENTER ANDROID MSAL TESTS PHASE
- job: 'RunAppCenterAndroidMsalTests'
  dependsOn: 
  - 'BuildAndStageProjects'
  - 'BuildAndroidAppCenterApp'
  pool:
    vmImage: 'windows-2022'
  variables:
    runCodesignValidationInjection: false

  steps:
  - template: template-android-appcenter-tests.yaml
    parameters:
      DataFileDirectory: ${{ parameters.DataFileDirectory }}

# APP CENTER IOS MSAL TESTS PHASE
# - job: 'RunAppCenterIosMsalTests'
#   dependsOn:
#   - 'BuildAndStageProjects'
#   - 'BuildiOSAppCenterApp'
#   pool:
#     vmImage: 'windows-2022'
#   variables:
#     runCodesignValidationInjection: false

#   steps:
#   - template: template-ios-appcenter-tests.yaml
#     parameters:
#       DataFileDirectory: ${{ parameters.DataFileDirectory }}


# Disabled as the build agent is not compliant. Tracking issue https://github.com/AzureAD/microsoft-authentication-library-for-dotnet/issues/3066
# To fix see https://aka.ms/noselfhostedpools

  #This task will initiate PKey Authentication tests on a dedicated virtual machine that has been preconfigured to allow device Authentication
  #using a dedicated lab account ("idlabca@msidlab8.com"). This machine is part of the "DevEx Win8 Automation" agent pool.
  #Because this agent pool is shared with other teams in our org, a specific agent has been assigned to this build to avoid collisions
  #and to allow teams to configure the agent as needed for their specific platform.
  #This agent ('MSIDWIN802') is configured to specifically run MSAL.NET PKey Auth tests and should be used primarily.
#- job: 'RunDeviceAuthTests'
#  dependsOn: 'BuildAndStageProjects'
#  pool:
#      name: DevEx Win8 Automation
#      demands: VisualStudio2019 -equals 2019
#  variables:
#      runCodesignValidationInjection: false

#  steps:
#  # Install KeyVault secrets
#  - template: template-install-keyvault-secrets.yaml

#  - template: template-run-device-auth-tests.yaml
#    parameters:
#      TestFilter: '$(System.ArtifactsDirectory)\drop\msalTests\Microsoft.Identity.Test.Integration.Win8\**\*'
