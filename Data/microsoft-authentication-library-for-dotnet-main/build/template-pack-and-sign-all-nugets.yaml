# template-pack-and-sign-all-nugets.yaml
# Pack and sign all nuget packages needed for our builds

parameters:
  BuildConfiguration: 'release'
  MsalSourceDir: '' #Used to determine default MSAL location
  NugetPackagesWildcard: '$(Build.ArtifactStagingDirectory)\packages\*.nupkg'
  ArtifactPublishPath: '$(Build.ArtifactStagingDirectory)\packages'

steps:

# Pack and sign Microsoft.Identity.Client
- template: template-pack-and-sign-nuget.yaml
  parameters:
    BuildConfiguration: ${{ parameters.BuildConfiguration }}
    ProjectRootPath: '$(Build.SourcesDirectory)\$(MsalSourceDir)src\client'
    AssemblyName: 'Microsoft.Identity.Client'

# Pack and sign Microsoft.Identity.Client.Desktop
- template: template-pack-and-sign-nuget.yaml
  parameters:
    BuildConfiguration: ${{ parameters.BuildConfiguration }}
    ProjectRootPath: '$(Build.SourcesDirectory)\$(MsalSourceDir)src\client'
    AssemblyName: 'Microsoft.Identity.Client.Desktop'

 # Pack and sign Microsoft.Identity.Client.Broker
- template: template-pack-and-sign-nuget.yaml
  parameters:
    BuildConfiguration: ${{ parameters.BuildConfiguration }}
    ProjectRootPath: '$(Build.SourcesDirectory)\$(MsalSourceDir)src\client'
    AssemblyName: 'Microsoft.Identity.Client.Broker'

# Copy all packages out to staging
- task: CopyFiles@2
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)\packages'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\$(MsalSourceDir)'
    Contents: '**\*nupkg'
    TargetFolder: '$(Build.ArtifactStagingDirectory)\packages'
    flattenFolders: true

# Sign all final nuget packages in the staging directory
- task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
  displayName: 'Sign Packages'
  inputs:
    ConnectedServiceName: 'IDDP Code Signing'
    FolderPath: '$(Build.ArtifactStagingDirectory)\packages'
    Pattern: '*nupkg'
    signConfigType: inlineSignParams
    inlineOperation: |
     [
         {
             "keyCode": "CP-401405",
             "operationSetCode": "NuGetSign",
             "parameters": [ ],
             "toolName": "sign",
             "toolVersion": "1.0"
         },
         {
             "keyCode": "CP-401405",
             "operationSetCode": "NuGetVerify",
             "parameters": [ ],
             "toolName": "sign",
             "toolVersion": "1.0"
         }
     ]
    SessionTimeout: 20
    VerboseLogin: true
  timeoutInMinutes: 5

- task: CmdLine@2
  displayName: 'Verify packages are signed'
  inputs:
    script: 'dotnet nuget verify ${{ parameters.NugetPackagesWildcard }}'
  continueOnError: true

- task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
  displayName: 'Get Software Bill Of Materials (SBOM)'
  inputs:
       BuildDropPath: '${{ parameters.ArtifactPublishPath }}'
